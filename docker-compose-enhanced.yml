version: '3.8'

# Docker Compose dengan Enhanced Entrypoints SIIMUT
# Gunakan file ini sebagai contoh untuk implementasi entrypoint baru

services:
  # Database MySQL
  db:
    image: mysql:8.0
    container_name: siimut_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_secret
      MYSQL_DATABASE: siimut
      MYSQL_USER: siimut
      MYSQL_PASSWORD: secret
    volumes:
      - ./storage/mysql:/var/lib/mysql
      - ./Docker/db/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./Docker/db/sql:/docker-entrypoint-initdb.d:ro
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: siimut_redis
    restart: unless-stopped
    volumes:
      - ./Docker/redis/data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PHP-FPM dengan Enhanced Entrypoint (Production)
  app:
    build:
      context: .
      dockerfile: Docker/php/Dockerfile.alpine
    container_name: siimut_app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Mount entrypoint selector
      - ./Docker/php/entrypoint-selector.sh:/entrypoint.sh:ro
      - ./Docker/php:/entrypoints:ro
      # Mount application
      - ./site:/var/www/html:rw
      # Mount PHP configuration
      - ./Docker/php/php.ini:/usr/local/etc/php/php.ini:ro
    entrypoint: ["/entrypoint.sh"]
    command: ["auto", "php-fpm"]
    environment:
      # Application Environment
      - APP_ENV=production
      - APP_DEBUG=false
      
      # Auto-detection mode
      - SIIMUT_MODE=production
      
      # Database Configuration
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=siimut
      - DB_USERNAME=siimut
      - DB_PASSWORD=secret
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=null
      
      # Enhanced Entrypoint Settings
      - SIIMUT_WAIT_FOR_DB=true
      - SIIMUT_WAIT_FOR_REDIS=true
      - SIIMUT_OPTIMIZE_CACHE=true
      - SIIMUT_RUN_MIGRATIONS=false
      - SIIMUT_STORAGE_LINK=true
    healthcheck:
      test: ["CMD-SHELL", "php -v || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development version (uncomment for development)
  # app-dev:
  #   build:
  #     context: .
  #     dockerfile: Docker/php/Dockerfile.alpine
  #   container_name: siimut_app_dev
  #   depends_on: [db, redis]
  #   volumes:
  #     - ./Docker/php/entrypoint-development.sh:/entrypoint.sh:ro
  #     - ./site:/var/www/html:rw
  #     - ./Docker/php/php.ini:/usr/local/etc/php/php.ini:ro
  #   entrypoint: ["/entrypoint.sh"]
  #   command: ["php-fpm"]
  #   environment:
  #     - APP_ENV=local
  #     - APP_DEBUG=true
  #     - SIIMUT_AUTO_MIGRATE=true
  #     - SIIMUT_AUTO_SEED=false
  #     - SIIMUT_INSTALL_DEV_DEPS=true
  #     - SIIMUT_CLEAR_CACHE=true
  #     - SIIMUT_ENABLE_XDEBUG=false
  #   ports:
  #     - "9000:9000"

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: siimut_nginx
    restart: unless-stopped
    depends_on: [app]
    volumes:
      - ./site:/var/www/html:ro
      - ./Docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./Docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./Docker/logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Caddy Alternative (uncomment untuk gunakan Caddy)
  # caddy:
  #   image: caddy:alpine
  #   container_name: siimut_caddy
  #   restart: unless-stopped
  #   depends_on: [app-caddy]
  #   volumes:
  #     - ./site:/var/www/html:ro
  #     - ./Docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
  #     - ./Docker/logs/caddy:/var/log/caddy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  
  # PHP-FPM optimized untuk Caddy
  # app-caddy:
  #   build:
  #     context: .
  #     dockerfile: Docker/php/Dockerfile.caddy
  #   container_name: siimut_app_caddy
  #   depends_on: [db, redis]
  #   volumes:
  #     - ./Docker/php/entrypoint-caddy.sh:/entrypoint.sh:ro
  #     - ./site:/var/www/html:rw
  #   entrypoint: ["/entrypoint.sh"]
  #   command: ["php-fpm"]
  #   environment:
  #     - APP_ENV=production
  #     - SIIMUT_CADDY_OPTIMIZE=true
  #     - SIIMUT_STATIC_CACHE=true
  #     - SIIMUT_HEALTH_CHECK=true

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: siimut_phpmyadmin
    restart: unless-stopped
    depends_on: [db]
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - PMA_USER=siimut
      - PMA_PASSWORD=secret
    volumes:
      - ./Docker/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.inc.php:ro
      - ./Docker/phpmyadmin/sessions:/sessions:rw
    ports:
      - "8080:80"

  # Queue Worker (uncomment jika diperlukan)
  # queue:
  #   build:
  #     context: .
  #     dockerfile: Docker/php/Dockerfile.alpine
  #   container_name: siimut_queue
  #   restart: unless-stopped
  #   depends_on: [app]
  #   volumes:
  #     - ./Docker/php/entrypoint-enhanced.sh:/entrypoint.sh:ro
  #     - ./site:/var/www/html:rw
  #   entrypoint: ["/entrypoint.sh"]
  #   command: ["php", "artisan", "queue:work", "--sleep=3", "--tries=3"]
  #   environment:
  #     - APP_ENV=production
  #     - SIIMUT_QUEUE_WORKER=true
  #     - SIIMUT_WAIT_FOR_DB=true
  #     - SIIMUT_WAIT_FOR_REDIS=true

volumes:
  mysql_data:
  redis_data:

networks:
  default:
    name: siimut_network